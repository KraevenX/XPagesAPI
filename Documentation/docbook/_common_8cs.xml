<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_common_8cs">
    <title>Common.cs File Reference</title>
        <section>
            <title> Classes </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="class_common">Common</link></para>
<para><emphasis>&lt;summary&gt;
Class with common methods
&lt;/summary&gt;</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <simplesect>
            <title> Namespaces </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="namespace_system">System</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="namespace_system_1_1_collections">System::Collections</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file C:/Users/Acketk/source/repos/VSTS/XPagesAPI/XPagesAPI/Common.cs</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="keyword">using</emphasis>&#32;<link linkend="namespace_system">System</link>;
2 <emphasis class="keyword">using</emphasis>&#32;<link linkend="namespace_system">System</link>.Collections;
3 <emphasis class="comment"></emphasis>
4 <emphasis class="comment">///&#32;&lt;summary&gt;</emphasis>
5 <emphasis class="comment">///&#32;Class&#32;with&#32;common&#32;methods</emphasis>
6 <emphasis class="comment">///&#32;&lt;/summary&gt;</emphasis>
7 <emphasis class="comment"></emphasis><emphasis class="keyword">public</emphasis>&#32;<emphasis class="keyword">static</emphasis>&#32;<emphasis class="keyword">class&#32;</emphasis>Common&#32;{
8 <emphasis class="comment"></emphasis>
9 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;&lt;summary&gt;</emphasis>
10 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;Get&#32;formatted&#32;string&#32;from&#32;the&#32;provided&#32;exception</emphasis>
11 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;&lt;/summary&gt;</emphasis>
12 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;&lt;param&#32;name=&quot;ex&quot;&gt;&lt;/param&gt;</emphasis>
13 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;&lt;returns&gt;&lt;/returns&gt;</emphasis>
14 <emphasis class="comment"></emphasis>&#32;&#32;&#32;&#32;[<link linkend="namespace_system">System</link>.Diagnostics.DebuggerStepThrough()]
15 &#32;&#32;&#32;&#32;<emphasis class="keyword">public</emphasis>&#32;<emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">string</emphasis>&#32;GetErrorInfo(Exception&#32;ex)&#32;{
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="namespace_system">System</link>.Text.StringBuilder&#32;sb&#32;=&#32;<emphasis class="keyword">new</emphasis>&#32;<link linkend="namespace_system">System</link>.Text.StringBuilder();
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="namespace_system">System</link>.Diagnostics.StackTrace&#32;st&#32;=&#32;<emphasis class="keyword">new</emphasis>&#32;<link linkend="namespace_system">System</link>.Diagnostics.StackTrace(ex,&#32;<emphasis class="keyword">true</emphasis>);
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">string</emphasis>&#32;FileName&#32;=&#32;<emphasis class="stringliteral">&quot;&quot;</emphasis>;
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">string</emphasis>&#32;Method&#32;=&#32;<emphasis class="stringliteral">&quot;&quot;</emphasis>;
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">string</emphasis>&#32;LineNumber&#32;=&#32;<emphasis class="stringliteral">&quot;&quot;</emphasis>;
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.AppendLine(<emphasis class="stringliteral">&quot;&quot;</emphasis>);
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.AppendLine(ex.Message);
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.AppendLine(<emphasis class="stringliteral">&quot;&quot;</emphasis>);
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">foreach</emphasis>&#32;(<link linkend="namespace_system">System</link>.Diagnostics.StackFrame&#32;frame&#32;in&#32;st.GetFrames())&#32;{
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FileName&#32;=&#32;<link linkend="namespace_system">System</link>.IO.Path.GetFileName(frame.GetFileName());
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Method&#32;=&#32;frame.GetMethod().ToString();
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LineNumber&#32;=&#32;frame.GetFileLineNumber().ToString();
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(FileName&#32;!=&#32;<emphasis class="stringliteral">&quot;&quot;</emphasis>)
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.AppendLine(<emphasis class="stringliteral">&quot;Filename&#32;:&#32;&quot;</emphasis>&#32;+&#32;FileName);
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(Method&#32;!=&#32;<emphasis class="stringliteral">&quot;&quot;</emphasis>)
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.AppendLine(<emphasis class="stringliteral">&quot;Method&#32;:&#32;&quot;</emphasis>&#32;+&#32;Method);
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(LineNumber&#32;!=&#32;<emphasis class="stringliteral">&quot;&quot;</emphasis>)
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sb.AppendLine(<emphasis class="stringliteral">&quot;Line&#32;NÂ°&#32;:&#32;&quot;</emphasis>&#32;+&#32;LineNumber);
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;sb.ToString();
36 &#32;&#32;&#32;&#32;}
37 <emphasis class="comment"></emphasis>
38 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;&lt;summary&gt;</emphasis>
39 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;Get&#32;a&#32;string&#32;from&#32;a&#32;list&#32;of&#32;string&#32;separated&#32;by&#32;the&#32;provided&#32;separator</emphasis>
40 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;&lt;/summary&gt;</emphasis>
41 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;&lt;param&#32;name=&quot;arList&quot;&gt;&lt;/param&gt;</emphasis>
42 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;&lt;param&#32;name=&quot;separator&quot;&gt;&lt;/param&gt;</emphasis>
43 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;&lt;returns&gt;&lt;/returns&gt;</emphasis>
44 <emphasis class="comment"></emphasis>&#32;&#32;&#32;&#32;<emphasis class="keyword">public</emphasis>&#32;<emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">string</emphasis>&#32;GetListAsString(IList&#32;arList,&#32;<emphasis class="keywordtype">string</emphasis>&#32;separator)&#32;{
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">string</emphasis>&#32;returnString&#32;=&#32;<emphasis class="stringliteral">&quot;&quot;</emphasis>;
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>&#32;(arList&#32;!=&#32;null&#32;&amp;&amp;&#32;arList.Count&#32;&gt;&#32;0)&#32;{
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">foreach</emphasis>&#32;(<emphasis class="keywordtype">string</emphasis>&#32;str&#32;<emphasis class="keywordflow">in</emphasis>&#32;arList)&#32;{
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;returnString&#32;=&#32;returnString&#32;+&#32;str&#32;+&#32;separator;
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;returnString&#32;=&#32;returnString.Substring(0,&#32;returnString.LastIndexOf(separator));
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;returnString;
53 &#32;&#32;&#32;&#32;}
54 <emphasis class="comment"></emphasis>
55 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;&lt;summary&gt;</emphasis>
56 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;Application&#32;Uncaught&#32;Exception&#32;Handler</emphasis>
57 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;&lt;/summary&gt;</emphasis>
58 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;&lt;param&#32;name=&quot;sender&quot;&gt;&lt;/param&gt;</emphasis>
59 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;&lt;param&#32;name=&quot;e&quot;&gt;&lt;/param&gt;</emphasis>
60 <emphasis class="comment">&#32;&#32;&#32;&#32;///&#32;&lt;returns&gt;&lt;/returns&gt;</emphasis>
61 <emphasis class="comment"></emphasis>&#32;&#32;&#32;&#32;[<link linkend="namespace_system">System</link>.Diagnostics.DebuggerStepThrough()]
62 &#32;&#32;&#32;&#32;<emphasis class="keyword">public</emphasis>&#32;<emphasis class="keyword">static</emphasis>&#32;<emphasis class="keywordtype">void</emphasis>&#32;ExceptionHandler(<emphasis class="keywordtype">object</emphasis>&#32;sender,&#32;<link linkend="namespace_system">System</link>.UnhandledExceptionEventArgs&#32;e)&#32;{
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Exception&#32;Excep;
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Excep&#32;=&#32;(Exception)e.ExceptionObject;
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="class_connector">Connector</link>.ResetReturn();
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="class_connector">Connector</link>.<link linkend="class_connector_1a1ed422674b344524fd77998dcf6a9ba6">ReturnMessages</link>.Add(<emphasis class="stringliteral">&quot;Unhandled&#32;error&#32;occured&#32;in&#32;application:&#32;&quot;</emphasis>&#32;+&#32;Environment.NewLine&#32;+&#32;<emphasis class="stringliteral">&quot;Application&#32;aborted&#32;on&#32;&quot;</emphasis>&#32;+&#32;DateTime.Now&#32;+&#32;Environment.NewLine&#32;+&#32;GetErrorInfo(Excep));
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="class_connector">Connector</link>.<link linkend="class_connector_1a9365777a6b7b711b75bcfa6c4d53e989">HasError</link>&#32;=&#32;<emphasis class="keyword">true</emphasis>;
68 
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GC.Collect();
70 &#32;&#32;&#32;&#32;}
71 }
    </computeroutput></literallayout>
</section>
